{"version":3,"file":"component---src-pages-experiments-gripper-mdx-8ad6b27906a24ab52ed9.js","mappings":"wLAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBC,EAAAA,EAAK,CACxEC,MAAO,YACL,KAAMF,EAAAA,cAAoBZ,EAAYG,GAAI,CAC5CY,GAAI,UACJC,MAAO,CACLC,SAAU,aAEXL,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCc,KAAM,WACN,aAAc,oBACdC,UAAW,iBACVP,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,WAAY,KAAM,KAAMT,EAAAA,cAAoBU,EAAAA,EAAO,CACtDC,IAAK,uBACH,KAAMX,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,2IAA4I,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,6DAA8DM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,OAAQ,iDAAkD,KAAMK,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,4QAA6Q,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,4GAA6G,KAAMM,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,mEAAoE,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,+JAAgK,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,oFAAuF,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,qbAC35C,CAKA,UAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOc,EAAYb,EAAAA,cAAoBa,EAAW1B,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECpCe,SAASuB,EAAKI,GAA4B,IAA3B,IAAEH,GAAsBG,EACpD,OACEd,EAAAA,cAAA,SACEe,UAAQ,EACRX,MAAO,CACLY,aAAc,OACdC,MAAO,OACPC,OAAQ,OACRC,UAAW,OACXC,aAAc,SAGhBpB,EAAAA,cAAA,UAAQW,IAAG,IAAMA,EAAOU,KAAK,cAAc,+CAIjD,C","sources":["webpack://gatsby-starter-default/./src/pages/experiments/gripper.mdx","webpack://gatsby-starter-default/./src/components/video.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SEO from \"../../components/seo\";\nimport Video from \"../../components/video\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: \"Gripper\"\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"gripper\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gripper\",\n    \"aria-label\": \"gripper permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gripper\"), \"\\n\", \"\\n\", React.createElement(Video, {\n    src: \"videos/gripper.mp4\"\n  }), \"\\n\", React.createElement(_components.p, null, \"I built Gripper when I realized that the context windows of frontier language models were long enough to fit a small webapp's codebase.\"), \"\\n\", React.createElement(_components.p, null, \"What does the software engineering process look like when \", React.createElement(_components.em, null, \"all\"), \" codebases fit in a context window like that?\"), \"\\n\", React.createElement(_components.p, null, \"In my view, a code-writing tool would look a lot like a self-fulfilling to-do list. Nobody can produce a complete specification of what they want upfront. They need to add features iteratively; a feedback loop of specifying changes, running them, and staging them.\"), \"\\n\", React.createElement(_components.p, null, \"Gripper was designed with a few features that I felt were missing from existing code generation systems:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A task-based representation of the software engineering process\"), \"\\n\", React.createElement(_components.li, null, \"A live, observable log of actions taken that resembles the activity of a human software engineer (opening and editing files, settling on a change proposal)\"), \"\\n\", React.createElement(_components.li, null, \"A \\\"staging\\\" model on top of Git that affords easy rollback of faulty generations\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Many code editing tasks can now be performed entirely by language models, we just have to situate them in the right steps of the engineering process. We aren't lacking the model capabilities for these tasks, but the sociotechnical substrate in which they can smoothly contribute to a project. Somewhere in between opening a lengthy GitHub issue and a Copilot autocompletion. Something iterative, but at a humane level of abstraction.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\"\nexport default function Video({ src }: { src: string }) {\n  return (\n    <video\n      controls\n      style={{\n        borderRadius: \"10px\",\n        width: \"100%\",\n        height: \"auto\",\n        marginTop: \"10px\",\n        marginBottom: \"40px\",\n      }}\n    >\n      <source src={`/${src}`} type=\"video/mp4\" />\n      Your browser does not support the video tag.\n    </video>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","em","ul","li","_provideComponents","components","React","SEO","title","id","style","position","href","className","dangerouslySetInnerHTML","__html","Video","src","wrapper","MDXLayout","_ref","controls","borderRadius","width","height","marginTop","marginBottom","type"],"sourceRoot":""}